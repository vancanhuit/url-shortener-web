name: Go

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'

env:
  GO_VERSION: 1.25.0
  REGISTRY: ghcr.io

permissions:
  contents: write
  packages: write

jobs:
  ci-cd:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: |
            go mod tidy
            npm install

      - name: Build Tailwind CSS
        run: npm run build:css

      - name: Run tests
        run: |
          source ./scripts/run-testdb.sh
          go test -v -cover ./...

      - name: Run build
        run: go build -o /tmp/url-shortener-web ./cmd/web

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: url-shortener-web
          path: /tmp/url-shortener-web
          compression-level: 6

      - name: Run golangci-lint
        run: go tool golangci-lint run --timeout 15m -v ./...

      - name: Run govulncheck
        run: go tool govulncheck ./...

      - name: Docker metadata
        id: metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          flavor: |
            latest=auto
            prefix=
            suffix=
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=tag
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.0') }}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/v0.') }}
            type=sha

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          outputs: type=docker,dest=/tmp/image.tar
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          annotations: ${{ steps.metadata.outputs.annotations }}

      - name: Upload image tarball
        uses: actions/upload-artifact@v4
        if: github.event_name == 'pull_request'
        with:
          name: image
          path: /tmp/image.tar
          compression-level: 0

      - name: Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: /tmp/url-shortener-web
          generate_release_notes: true
          body: |
            `docker pull ghcr.io/${{ github.repository }}:${{ github.ref_name }}`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
